#!/data/data/com.termux/files/usr/bin/bash
#This script will install i-Haklab v.3.0 2021 by Ivam3 - It is a hacking laboratory that contains open source tools recommended by Ivam3.
IFS=$'\n\t'
trap ctrl_c 2
ctrl_c() { printf "$Y\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n";}
while [ ! -d ~/i-Haklab ] && [ $PWD != ~/i-Haklab ];do
	printf "$R\n(_>)─➤$W i-Haklab must to be in HOME path.\n"
	ctrl_c;exit
done
printf "Running...";sleep 0.5
[[ -d ~/.local ]] && rm -rf ~/.local/* || mkdir ~/.local
[[ -d ~/.config/fish ]] && rm -rf ~/.config/fish
[[ -d $PREFIX/share/i-Haklab ]] && rm -rf $PREFIX/share/i-Haklab
[[ -d ~/java ]] && rm -rf ~/java
mkdir -p ~/.local/{etc/i-Haklab,etc/fish,lib,share,tools,var/service/www}
cp -r ~/i-Haklab $HOME/.local/share
source $HOME/.local/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
chk-Cuser
clear;banner;sleep 0.5
if command -v fish >/dev/null;then yes|apt remove fish && apt autoremove; fi

printf "$Y\n(_>)─➤$W Head to app configuration and provides storage permissions to termux.$Y\n ╰─➤$W when finished$G press enter\n$W"
read enter

#::::::::::Installation of dependencies::::::::::::#
printf "$G(_>)─➤$W Upgrading and installing Termux packages.\n"
APTupdate
apt list|awk -F "/" '{print $1}' > $TMPDIR/alltools.tmp
pkg list-installed|awk -F "/" '{print $1}' > $TMPDIR/installed.tmp
for repo in $(cat $iHAKLAB/.set/to-install/listOfpkg); do
	GOTIT=$(grep -oE $repo $TMPDIR/installed.tmp)
	PKG=$(grep -o $repo $TMPDIR/alltools.tmp)
	if [ ! -z "$PKG" ] && [ -z "$GOTIT" ];then
		echo $repo >> $TMPDIR/toInstallList.tmp
	elif [ ! -z "$PKG" ] && [ ! -z "$GOTIT" ]; then
		continue
	else
		printf "$R(_>)─➤$W The repository $repo is not candidate.\n"
		sleep 1
	fi
done
yes|apt install $(cat $TMPDIR/toInstallList.tmp)
rm -rf $TMPDIR/*.tmp
printf "$G\n(_>)─➤$W Installing Abhacker repositories."
if [ ! -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ];then
	TMPabh=$(mktemp)
	wget -q --tries=20 "${iHDB}/fix-tools/instAbhackerRepo" -O $TMPabh
        chmod +x $TMPabh
fi

#::: UPDATING LOCATE DATA BASE :::#
printf "$G\n(_>)─➤$W Updating data base."
updatedb

printf "$G\n(_>)─➤$W Installing required python modules.\n"
for v in python python2 ; do
	$v -m pip --no-color --quiet --no-cache-dir install --upgrade pip 2>/dev/null
done
for module in trufflehog wheel speedtest-cli scapy wfuzz h8mail objection frida;do
	python -m pip --no-color --quiet --no-cache-dir install $module 
done

#::::::::::Definition of variable TOOLS::::::::::::#
printf "$G\n(_>)─➤ Getting access to external storage...$W"
printf "$Y\n(_>)─➤$W Access..";
sleep 0.5
if [ -w $TOOLS ];then
	printf "$G. DONE||$W\n"
else
	printf "$R. FAIL!!$W\n"
fi
yes|termux-setup-storage

#::::::::::Installation of Ohmyfish::::::::::::#
printf "$G\n(_>)─➤ Installing interactive shell.$W\n"
[[ -d ~/.local/share/omf ]] && rm -rf ~/.local/share/omf
[[ -d ~/.config/omf ]] && rm -rf ~/.config/omf/
git config --global core.autocrlf
printf "$Y\n(_>)─➤ Now you will see a PS1 as '⋊> ~/i-Haklab on master ⨯'\n ╰─➤ when it happen hold on for one minute and then type exit to continue$W\n"
curl -Ls $iHDB/to-install/get.oh-my.fish|fish
cat <<- CONF > ~/.local/etc/fish/config.fish
if status --is-login
bash /data/data/com.termux/files/home/.local/etc/i-Haklab/wall-banner
end

function on_exit --on-event fish_exit
echo 'Have a nice hacking day!!'
sleep 1
end

set fish_theme bira
set -g theme_nerd_fonts yes
set DISPLAY :0
set PULSE_SERVER 127.0.0.1
set PATH $HOME/.local/bin:$PREFIX/bin
set HOME /data/data/com.termux/files/home
set GOPATH /data/data/com.termux/files/home/go
set GOROOT /data/data/com.termux/files/usr/lib/go
set JAVA_HOME /data/data/com.termux/files/usr/opt/openjdk
set iHAKLAB /data/data/com.termux/files/home/.local/share/i-Haklab
set LD_LIBRARY_PATH $HOME/.local/lib:$PREFIX/lib
set TOOLS $TOOLS
alias LOCALHOST="ifconfig 2>/dev/null|grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}'|grep -v 255|grep -v 127|tail -n 1"
alias serverapache="apachectl"
alias postgresql="pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql"
alias traductor="gawk -f (curl -Ls git.io/translate | psub) -- -shell"
pulseaudio --start --exit-idle-time=-1
pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1
CONF
[[ -e $PREFIX/etc/fish/config.fish ]] && rm -rf $PREFIX/etc/fish/config.fish
ln -s $HOME/.local/etc/fish/config.fish $PREFIX/etc/fish/config.fish
TMP_fish=$(mktemp)
cat <<- CONF > $TMP_fish
#!/bin/env fish
omf install bira
CONF
fish $TMP_fish >/dev/null 2>&1
cat <<- CONF > $HOME/.bashrc
export PATH=$HOME/.local/bin:$PREFIX/bin
export LD_LIBRARY_PATH=$HOME/.local/lib:$PREFIX/lib
[[ ! \$(grep -oE "i-Haklab" $PREFIX/etc/fish/config.fish >/dev/null) ]] && rm -rf $PREFIX/etc/fish/config.fish;ln -s $HOME/.local/etc/fish/config.fish $PREFIX/etc/fish/config.fish
chsh -s fish
CONF

#::::::::::Insatalling i-Haklab's login::::::::::::#
[[ -e $HOME/.local/etc/i-Haklab/login-termux ]] && rm -f $HOME/etc/i-Haklab/login-termux
[[ -e $PREFIX/etc/bashito ]] && rm -f $PREFIX/etc/bashito
[[ -e $PREFIX/etc/motd ]] && rm -f $PREFIX/etc/motd
[[ -e $PREFIX/etc/motd.dpkg-old ]] && rm -f $PREFIX/etc/motd.dpkg-old
for i in Quiz Ivam3 Cinderella;do
	[[ -e $HOME/.local/etc/i-Haklab/.$i ]] || touch $HOME/.local/etc/i-Haklab/.$i
done
[[ -d $HOME/.local/etc/i-Haklab ]] || mkdir -p $HOME/.local/etc/i-Haklab
wget -q $iHDB/to-install/login-termux -O $HOME/.local/etc/i-Haklab/login-termux
wget -q $iHDB/libexec/banner/i-Haklab -O $HOME/.local/etc/i-Haklab/login-banner
cat <<- CONF > $HOME/.local/etc/i-Haklab/wall-banner
#!/usr/bin/bash
#Banner for i-Haklab created by @Ivam3 on Jan/2019
IFS=$'\n\t'
bash $HOME/.local/etc/i-Haklab/login-banner
#        i-Haklab by @Ivam3
CONF
chmod 711 -R $HOME/.local/etc
chmod +w $HOME/.local/etc/i-Haklab/.Ivam3
printf "SXZhbTNieUNpbmRlcmVsbGEK" > $HOME/.local/etc/i-Haklab/.Ivam3
chmod -w $HOME/.local/etc/i-Haklab/.Ivam3
chmod +w $HOME/.local/etc/i-Haklab/.Quiz
printf "VGhlIGFjY2VzcyBrZXkgaXMgSXZhbTNieUNpbmRlcmVsbGEK" > $HOME/.local/etc/i-Haklab/.Quiz
chmod -w $HOME/.local/etc/i-Haklab/.Quiz
chmod +w $HOME/.local/etc/i-Haklab/.Cinderella
printf "SXZhbTNieUNpbmRlcmVsbGEK" > $HOME/.local/etc/i-Haklab/.Cinderella
chmod -w $HOME/.local/etc/i-Haklab/.Cinderella

#::::::::::Insatalling i-Haklab tools::::::::::::#
printf "$G\n(_>)─➤$W Installing principal external tools."
chmod 750 $iHAKLAB/.set/bin/*
ln -s $iHAKLAB/.set/bin $HOME/.local/bin

printf "$G\n(_>)─➤$W Installing ngrok.io ngrok-ssh and ngrok-server."
[[ $(command -v ngrok) ]] && mv $(command -v ngrok) $(command -v ngrok).io
bash $TMPabh --install ngrok-server >/dev/null 2>&1
rm $TMPabh

printf "$G\n(_>)─➤$W Installing Python Exploit Development Assistance for GDB."
curl -Ls ${iHDB}/to-install/gdb_peda.sh|bash

printf "$G\n(_>)─➤$W Set nano configuration..."
cat <<- CONF > $HOME/.nanorc
set linenumbers
set historylog
set tabsize 4
set autoindent
set mouse
set titlecolor white,gray
set statuscolor white,red
set keycolor white,gray
set functioncolor green
set numbercolor white,gray
set softwrap
set softwrap
#set nohelp
CONF

printf "$G\n(_>)─➤$W Installing VIM predictable text."
[[ -d ~/.vim ]] && rm -rf ~/.vim
wget -q --tries=20 ${iHDB}/to-install/iHaklabvim.zip -O $TMPDIR/iHaklabvim.zip
unzip -q $TMPDIR/iHaklabvim.zip -d $TMPDIR
rm -f $TMPDIR/iHaklabvim.zip
mv $TMPDIR/iHaklabvim/vim ~/.vim
mv $TMPDIR/iHaklabvim/vim/.vimrc ~/
rm -f $TMPDIR/iHaklabvim
vim +PlugUpdate +x +x

printf "$G\n(_>)─➤$W Setting i-Haklab style."
[[ -d ~/.termux ]] || mkdir -p ~/.termux
for i in $(ls $iHDB/to-install/.termux/);do
	wget -q --tries=20 $iHDB/to-install/$i -O ~/.termux/$i
done
ln -s $PREFIX/bin/fish ~/.termux/shell

#:::: Set VNC server ::::#
wget -q --tries=20 $iHDB/functions/unset.fish -O ~/.config/fish/functions/unset.fish
wget -q --tries=20 $iHDB/functions/fish_greeting.fish -O ~/.config/fish/functions/fish_greeting.fish
for TOOL in DoS-A-Tool ExiF embed evilurl localtunnel-server desktop-xfce metasploit;do
	bash $iHAKLAB/.set/share/install $TOOL
done
[[ -d ~/.vnc ]] || mkdir ~/.vnc
cat <<- CONF > ~/.vnc/xstartup
#!/data/data/com.termux/files/usr/bin/sh
## This file is executed during VNC server
## startup.

# Launch terminal emulator Aterm.
# Requires package 'aterm'.
aterm -geometry 160x48+20+20 -ls &

# Launch Tab Window Manager.
# Requires package 'xorg-twm'.
startxfce4
CONF

#::::::::::Searching for root permissions::::::::::::#
if chk-root;then
	wget -q --tries=20 $iHDB/bin/sudo -O $HOME/.local/bin/sudo
        if [[ -e ~/.suroot/.bashrc ]];then
                [[ -O ~/.suroot/.bashrc ]] || sudo chown $USER:$USER -R ~/.suroot/
        else
		[[ -d ~/.suroot ]] || mkdir ~/.suroot
        fi
        cat <<- CONF > ~/.suroot/.bashrc
PS1=\"\[\e[33m\][!] \[\e[31m\]Press\[\e[32m\] Ctrl d\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]\""
export TERM=xterm-256color
export LD_LIBRARY_PATH=$HOME/.local/lib:/data/data/com.termux/files/usr/lib
export PATH=$HOME/.local/bin:/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/system/xbin:/system/bin
HOME=/data/data/com.termux/files/home
fish
#          i-Haklab by @Ivam3
CONF
fi

bash $iHAKLAB/.set/share/review #LOGFILE
[[ -d ~/i-Haklab ]] && rm -rf ~/i-Haklab

printf "$G\n\n
(_>)─➤$W i-Haklab installed !!!$Y\n
(_>)─➤$W Main commands$Y
 ╰────────➤ run:$W i-Haklab -h :───────────:to automate process$Y
 ╰────────➤ run:$W run <name of tool> :────:to execute installed tool$Y
 ╰────────➤ run:$W omf theme :─────────────:to change a theme$Y
 ╰────────➤ run:$W lock :──────────────────:to block screen$Y
 ╰────────➤ run:$W IbyC-fixer :────────────:to fix termux's issues$Y
 ╰────────➤ run:$W LOCALHOST :─────────────:to show local ip$Y
 ╰────────➤ run:$W serverphp :─────────────:to start php server$Y
 ╰────────➤ run:$W traductor :─────────────:to init a translate shell$Y
 ╰────────➤ run:$W serverapache :──────────:to start apache server$Y
 ╰────────➤ run:$W torvpn :────────────────:to use a proxy connection$Y
 ╰────────➤ run:$W postgresql start :──────:to start postgresql data base$Y
 ╰────────➤ run:$W run Xwayland :──────────:to init graphical enviroment on Termux:Wayland app$Y
 ╰────────➤ run:$W vncserver :─────────────:to init graphical enviroment on vnc app$Y
 ╰────────➤ run:$W sudo <some commands> :──:to run commands as super user whithout rooted device$Y
 ╰────────➤ run:$W i-Haklab about i-Haklab :for all usage guide$G
(_>)─➤$W To fix issues going to$B t.me/Ivam3_Bot$G
(_>)─➤$W press$G enter$W to reestart Termux\n"
read enter;exec reset
#		i-Haklab by @Ivam3
