#!/data/data/com.termux/files/usr/bin/bash
#CREADED ON Dec/2018 BY @IVAM3
#UPGRADED ON 2022/Feb/9

IFS=$'\n\t'
trap ctrl_c 2
command -v curl >/dev/null || yes|apt install curl >/dev/null 2>&1
command -v ruby >/dev/null || yes|apt install ruby >/dev/null 2>&1
command -v lolcat >/dev/null || yes|gem install lolcat >/dev/null 2>&1
iHDB="https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set"
IbyCDB="https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/installer"
[[ -d $HOME/.local/bin ]] && binPATH="$HOME/.local/bin" || binPATH="$PREFIX/bin"
FILE=$(mktemp)
opc="$1"
opc2="$2"
opc3="${@:3}"
R='\033[1;31m'
G='\033[1;32m'
Goke='\033[92m'
Glig=='\e[1;32m'
Y='\033[1;33m'
B='\033[1;34m'
M='\033[1;35m'
C='\033[1;36m'
W='\033[0m'

ctrl_c(){ printf "$Y\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n";}
Chao-chao(){ printf "$Y\n[!]-> ::::::::::::::: DONE !! :::::::::::::::: <-[!]$G\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n";}
Repos() {
	printf "$Y\n(_>)─➤ Installing|upgrading repositories ...\n$W"
	yes|apt reinstall $Py
	$Py -m pip --quiet --no-color install --upgrade pip
	}
Lib() {
	for Libs in clang libtool libmpc libmpc-static libmpfr libmpfr-static libxml2 libxml2-static libxml2-utils libxslt libxslt-static libsodium libsodium-static tar wget; do
		SCHLIB=$(pkg list-installed | awk '{print $1}' | grep -oE $Libs | head -n1)
		if [ -z $SCHLIB ]; then
			printf "$Y\n(_>)─➤ Installing libreries ...\n$W"
			yes|apt install $Libs 2>/dev/null
		fi
	done
	}	
Turtle() {
	DIR=$(mktemp -d)
        wget $iHDB/fix-tools/py_modules/turtle-0.0.2.tar.gz -O $DIR/turtle-0.0.2.tar.gz -q
        if [ $DIR/turtle-0.0.2.tar.gz ]; then
                pushd $DIR
                gunzip $DIR/turtle-0.0.2.tar.gz
                if [ $DIR/turtle-0.0.2.tar ]; then
                        tar -xvf turtle-0.0.2.tar
                        if [ -d $DIR/turtle-0.0.2 ]; then
                                sed 's|      except ValueError, ve:|      except (ValueError, ve):|g' -i $DIR/turtle-0.0.2/setup.py
				$Py -m pip install -e turtle-0.0.2
                        fi
                fi
                popd
        fi
        rm -rf $DIR
	}
Menu() {
	printf $B"(USAGE-01)─➤ To fix python modules:$G\nIbyC-fixer <[B|BASIC] [L|LDFLAGS] [RCBT|RUST_CARGO_TARGET] [S|SODIUM]> <[Py|Py2]> <[file.txt|module(max 3)]>$W\n\nB  BASIC\tInstall module on basic\nL  LDFLAGS\tForce installation to use libraries and system compiler\nRCBT  RUST_CARGO_TARGET\tForce installation specifying Android as target platform\nS  SODIUM\tForce the installation to use the sodium decryptor\nPy  \t\tFor python3\nPy2  \t\tFor python2\n\nExamples:\n\tIbyC-fixer BASIC Py future\n\tIbyC-fixer S Py2 colorama\n"
	printf "$B\n(USAGE-02)─➤ To fix an specific issue:$G\nIbyC-fixer <[apt|nrauf|metasploit|downgradeRepo|RuGiR]> <option>$W\n\napt\t\t\t\tSearch and fix some errores on APT/PKG with dpkg\nnrauf         dir/to/app\tTo remapping unicode filenames to ascii when produced by apktool\nmetasploit\t\t\tTo fix metasploit instalation\ndowngradeRepo repo=version\tDowngrade apt|pkg reporitory tospecific version\nRuGiR\t\t\t\tTo fix ruby gems issues\nngrok\t\t\t\tInstall ngrok-server from Abhacker repositories\n\nExamples:\n\tIbyC-fixer RuGiR\n\tIbyC-fixer downgradeRepo ruby=2.7.2\n\tIbyC-fixer nrauf \$HOME/original\n\nFor more help join to$B https://t.me/Ivam3_Bot$W\n\n"
	exit
}
Chck() {
	for list in ${@:2} ; do
		MODULE=$(python -m pip list|awk '{print $1}'|grep $list)
		if [ ! -z $MODULE ]; then
			printf "$Y\n(_>)─➤ Module $MODULE is already exist for $Py\n$W"
		fi
	done
}
Args(){
	if [ "$opc2" = 'Py' ]; then
		Py=python
		Repos
		Lib
	elif [ "$opc2" = "Py2" ]; then
		Py=python2
		Repos
		Lib
	else
		Menu
	fi
}

while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n(_>)─➤ You need to be a common user$W\n"
	exit
done
until [ "$(basename "$0")" = "IbyC-fixer" ]; do
	printf "$R\n(_>)─➤ Wrong file name$Y | "
	sleep 1
  printf "fixing it";sleep 2
  printf ".";sleep 0.7
  printf "..";sleep 0.5
  printf "...";sleep 0.2
  mv $PWD/$(basename "$0") $binPATH/IbyC-fixer >/dev/null 2>&1
  printf "$G DONE!!$W\n";sleep 1
  exit
done
until [ -e $binPATH/IbyC-fixer ]; do
	if [ ! -e $binPATH/IbyC-fixer ] && [ -e $PWD/IbyC-fixer ];then
		mv $PWD/IbyC-fixer $binPATH/IbyC-fixer > /dev/null 2>&1
		printf "$Y(_>)─➤ IbyC-fixer was add to PATH$W\n"
		sleep 1.5
	else
		printf "$R(_>)─➤ You should add IbyC-fixer to PATH$W\n"
		exit
	fi
done

declare -a INSTADATE=($(ls -l $binPATH/IbyC-fixer|awk -F " " '{print $6,$7}') $(curl -sSL $iHDB/bin/IbyC-fixer|grep "UPGRADED ON"|awk -F "/" '{print $2,$3}'))
printf "$Y(_>)─➤$W Looking for updates..";
sleep 1
if [[ "${INSTADATE[0]}" != "${INSTADATE[2]}" ]] || [[ "${INSTADATE[1]}" -lt "${INSTADATE[3]}" ]];then
        printf "$Y.Upgrading";
        sleep 2
				wget -q $iHDB/bin/IbyC-fixer -O $binPATH/IbyC-fixer
				printf "$G..DONE!!$W"
				sleep 1
else
        echo "$G.UPDATED$W"
        sleep 1
fi

clear;curl -Ls "${iHDB}/libexec/banner/fixer"|bash|lolcat
[[ -z $opc ]] && Menu

case $opc in
	B|BASIC)
		Args
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install -r $module
			else
				$Py -m pip install $module
			fi
		done
		Chao-chao
		;;
	LDFLAGS|L)
		Args
		export LDFLAGS="-L/system/lib/ -lm -lcompiler_rt"
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install -r $module --global-option="build_ext" --global-option="--disable-jpeg"
			else
				$Py -m pip install $module --global-option="build_ext" --global-option="--disable-jpeg"
			fi
		done
		Chao-chao
		;;
	RUST_CARGO_TARGET|RCBT)
		Args
		yes|apt install rust
		export CARGO_BUILD_TARGET=$(rustc --version --verbose|sed -n 's|host: ||p')
		for module in ${@:3};do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install -r $module
			else
				$Py -m pip install $module
			fi
		done
		Chao-chao	
		;;
	SODIUM|S)
		Args
		export SODIUM_INSTALL=system
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install --no-binary :all: -r $module
			else
				$Py -m pip install --no-binary :all: $module
			fi
		done
		Chao-chao
		;;
	nrauf)
		if [ $opc2 ];then
			wget $iHDB/fix-tools/nrauf -O $FILE -q
			chmod +x $FILE
			exec $FILE $opc2
			rm -rf $FILE
		else
			printf "$R\n(_>)─➤$W Apk file unallocated\n"
		fi
		;;
	apt)
		yes|apt update > $FILE
		yes|apt upgrade >> $FILE
		apt clean && apt autoremove
		[[ $(grep -oE "E: Sub-process" $FILE) ]] && dpkg --configure -a
		[[ $(grep -oE "E: Failed to fetch" $FILE) ]] && apt --fix-broken install
		[[ $(grep -oE "E: Unable to fetch" $FILE) ]] && apt update --fix-missing
		[[ $(grep -oE "is not signed" $FILE) ]] || [[ $(grep -oE "NO_PUBKEY" $FILE) ]] && echo "deb https://packages-cf.termux.org/apt/termux-main/ stable main" > $PREFIX/etc/apt/sources.list;rm -rf $PREFIX/etc/apt/sources.list.d/*;dpkg --configure -a
		rm $FILE
		;;
	metasploit)
		[[ -d $PREFIX/var/lib/postgresql ]] && rm -rf $PREFIX/var/lib/postgresql
		wget -q "${iHDB}/fix-tools/fixmetasploit" -O $FILE
		chmod +x $FILE
		exec $FILE --install ruby=2.7.2 -r apt install metasploit -y
		yes|apt autoremove
		rm $FILE
		;;
	RuGiR)
		curl -Ls "${iHDB}/fix-tools/RuGiR" -o $FILE
		chmod +x $FILE
		exec $FILE
		rm -rf $FILE
		;;
	downgradeRepo)
		while [ ! $opc2 ];do
			printf "$R(_>)─➤ An argument needed$W\n\n"
			exit
		done
		if [ ! -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ];then
			printf "$Y(_>)─➤ Installing Abhacker repositories ...$G "
			wget -q "${iHDB}/fix-tools/instAbhackerRepo" -O $FILE
			chmod +x $FILE
			exec $FILE --install ${@:2} >/dev/null 2>&1
			rm $FILE
			printf "DONE!!$W\n"
		else
			exec apt install ${@:2}
		fi
		;;
	ngrok)
		if [ ! -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ];then
			printf "$Y(_>)─➤ Installing Abhacker repositories ...$G "
			wget -q "${iHDB}/fix-tools/instAbhackerRepo" -O $FILE
			chmod +x $FILE
			exec $FILE --install ngrok-server >/dev/null 2>&1
			rm $FILE
			printf "DONE!!$W\n"
		else
			printf "$G(_>)─➤$W Installing Ngrok from Abhacker repositories ...$G "
			apt install ngrok-server -y > /dev/null 2>&1;
			printf "DONE!!$W\n"
		fi
		;;
	*)
		ctrl_c
		exit
		;;
esac

#                                               @Ivam3
